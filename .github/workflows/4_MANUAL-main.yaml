name: Deploy to prod & Code Release

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: staging

      - name: Setup Git
        run: |
          git config --global user.name "Github Actions"
          git config --global user.email "actions@github.com"
      
      - name: Get latest version tag
        run: echo "LATEST_TAG=$(git describe --tags --abbrev=0 --match 'v*')" >> $GITHUB_ENV
      
      - name: Create new tag
        run: |
          LATEST_TAG=${{ env.LATEST_TAG }}
          echo "Last tag: $LATEST_TAG"

          if [ -z "$LATEST_TAG"]; then
            NEW_TAG="v1.0.0"
          else
            VERSION=$(echo $LATEST_TAG | /sed 's/^v//')
            IFS='.' read -r -a VERSION_PARTS <<< "$VERSION"
            MAJOR=${VERSION_PARTS[0]}
            MINOR=${VERSION_PARTS[1]}
            PATCH=${VERSION_PARTS[2]}

            PATCH=$((PATCH + 1))
            NEW_TAG="v$MAJOR.$MINOR.PATCH"
          fi

          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV
          echo "New tag: $NEW_TAG"

          git tag -a ${{ env.NEW_TAG }} -m "Release ${{ env.NEW_TAG }}"
          git push origin ${{ env.NEW_TAG }}
      
      - name: Create Changelog
        run: |
          git fetch --tags
          git log ${{ env.LATEST_TAG }}..HEAD --pretty=format:"* %s" > CHANGELOG.md
          git add CHANGELOG.md
          git commit -m "Update CHANGELOG.md for ${{ env.LATEST_TAG }}"
          git push origin staging
      
      - name: Update main branch
        run: |
          git checkout main
          git merge --no-ff staging
          git push origin main
      
      - name: Create Release
        uses: actions/create-release@v1
        with: 
          tag_name: ${{ env.NEW_TAG }}
          release_name: "Release ${{ env.NEW_TAG }}"
          body_path: ./CHANGELOG.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}