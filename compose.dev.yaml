x-baseService: &baseService
  restart: always
  healthcheck:
    interval: 1s
    timeout: 2s
    retries: 100

# secrets:
#   my_secret:
#     file: ./my_secret.txt

services:
  gateway:
    <<: *baseService
    image: nginx
    container_name: gateway
    ports:
      - ${GATEWAY_PORT}:80
    volumes:
      - ./gateway/:/etc/nginx/templates
    depends_on:
      - 
    #   - graphql-api
    #   - web-app
    environment:
      NGINX_ENVSUBST_OUTPUT_DIR: /etc/nginx/
      SERVICE_PORT: ${SERVICE_PORT}
  
  db:
    <<: *baseService
    image: postgres
    container_name: sql-db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_DB} -U ${POSTGRES_USER}"]
    volumes:
      - ./persist/sql-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  adminer:
    <<: *baseService
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - ${ADMINER_PORT}:8080
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      ADMINER_PORT: ${SERVICE_PORT}

  backend:
    build: ./backend
    healthcheck: 
      test: 'curl --fail --request POST --header ''content-type: application/json'' --url ''http://localhost:4000'' --data ''{"query":"query { __typename }"}'' || exit 1'
    depends_on:
      db:
        condition: service_healthy
  
  frontend:
    build: ./frontend
    healthcheck: 
      test: 'curl --fail --request GET --url ''http://localhost:5173'' || exit 1'
    depends_on:
      backend:
        condition: service_healthy