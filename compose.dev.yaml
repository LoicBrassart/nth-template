x-baseService: &baseService
  restart: always
  healthcheck:
    interval: 1s
    timeout: 2s
    retries: 100

# secrets:
#   my_secret:
#     file: ./my_secret.txt

services:
  dev-gateway:
    <<: *baseService
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports: 
      - ${GATEWAY_PORT}:80
    depends_on:
      dev-backend:
        condition: service_healthy
    
  dev-db:
    <<: *baseService
    image: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${DB_HOST} -U ${DB_USER}"]
    volumes:
      - ./persist/sql-db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_HOST: ${DB_HOST}

  dev-adminer:
    <<: *baseService
    image: adminer
    depends_on:
      dev-db:
        condition: service_healthy

  dev-backend:
    <<: *baseService
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    healthcheck: 
      test: ["CMD-SHELL", "curl --fail --request POST --header 'Content-Type: application/json' --url 'http://localhost:4000' --data '{\"query\":\"query { __typename }\"}' || exit 1"]
    depends_on:
      dev-db:
        condition: service_healthy
    volumes:
      - ./backend/src:/app/src/
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
